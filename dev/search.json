[{"path":"/dev/LICENSE.html","id":"apache-license","dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":"/dev/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"/dev/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"/dev/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"/dev/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"/dev/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"/dev/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"/dev/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"/dev/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"/dev/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"/dev/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"/dev/articles/pins-legacy.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Upgrading to pins 1.0.0","text":"simple example legacy API looks something like : convert modern API need make two major changes: Instead registering named board, create explicit board object. use pin_read() pin_write() instead pin_get() pin(). Since board object always first argument, might also want use pipe:","code":"# Legacy API board_register_local(\"vignette\", tempfile())  pin(head(mtcars), \"mtcars\", board = \"vignette\") pin_get(\"mtcars\", board = \"vignette\") #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 # Modern API board <- board_local()  pin_write(board, head(mtcars), \"mtcars\") #> Guessing `type = 'rds'` #> Creating new version '20210826T183433Z-3e025' #> Writing to pin 'mtcars' pin_read(board, \"mtcars\") #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 # Modern API board <- board_local()  board %>% pin_write(head(mtcars), \"mtcars\") #> Guessing `type = 'rds'` #> Replacing version '20210826T183433Z-3e025' with '20210826T183433Z-3e025' #> Writing to pin 'mtcars' board %>% pin_read(\"mtcars\") #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"/dev/articles/pins-legacy.html","id":"pinning-files","dir":"Articles","previous_headings":"Examples","what":"Pinning files","title":"Upgrading to pins 1.0.0","text":"Another way use pin() path file: pins 1.0.0 clearly separates two cases pin object pinning file, instead pin_write() pin_read() need pin_upload() pin_download():","code":"# Legacy API path <- tempfile() writeLines(letters, path)  pin(path, \"alphabet\", board = \"vignette\") pin_get(\"alphabet\", board = \"vignette\") #> [1] \"/tmp/RtmpEgtcL1/file2ebb1283e996/alphabet/file2ebb590acdc5\" # Modern API board %>% pin_upload(path, \"alphabet\") #> Creating new version '20210826T183433Z-ee580' board %>% pin_download(\"alphabet\") #> [1] \"~/.local/share/pins/alphabet/20210826T183433Z-ee580/file2ebb590acdc5\""},{"path":"/dev/articles/pins-legacy.html","id":"pinning-a-url","dir":"Articles","previous_headings":"Examples","what":"Pinning a url","title":"Upgrading to pins 1.0.0","text":"Finally, can pin() url automatically re-download changes: now needs made explicit new board_url(), since returns path, file, need use pin_download():","code":"# Legacy API base <- \"https://raw.githubusercontent.com/rstudio/pins/master/tests/testthat/\"  (pin(paste0(base, \"pin-files/first.txt\"), board = \"vignette\")) #> [1] \"/tmp/RtmpEgtcL1/file2ebb1283e996/first/first.txt\" # Modern API board_github <- board_url(c(   raw = paste0(base, \"pin-files/first.txt\") )) board_github %>% pin_download(\"raw\") #> [1] \"~/.cache/pins/url/87473d3442e598f929b65b6630da6fd8/first.txt\""},{"path":"/dev/articles/pins-legacy.html","id":"implicit-board","dir":"Articles","previous_headings":"Examples","what":"Implicit board","title":"Upgrading to pins 1.0.0","text":"’s also possible use pin() pin_get() without explicit board argument, case automatically uses local board: convert code, need create explicit board_local():","code":"# Legacy API pin(data.frame(x = 1:3), \"test-data\") pin_get(\"test-data\") #>   x #> 1 1 #> 2 2 #> 3 3 # Modern API board <- board_local()  board %>% pin_write(data.frame(x = 1:3), \"test-data\") #> Guessing `type = 'rds'` #> Creating new version '20210826T183434Z-73dc1' #> Writing to pin 'test-data' board %>% pin_read(\"test-data\") #>   x #> 1 1 #> 2 2 #> 3 3"},{"path":"/dev/articles/pins-legacy.html","id":"board-functions","dir":"Articles","previous_headings":"Equivalents","what":"Board functions","title":"Upgrading to pins 1.0.0","text":"Future releases add support additional boards based user feedback.","code":""},{"path":"/dev/articles/pins.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Get started with pins","text":"Every pin lives pin board, must start creating pin board. vignette ’ll use temporary board automatically deleted R session : real-life, ’d pick board depending want share data. options:","code":"board <- board_temp() board <- board_local() # share data across R sessions on the same computer board <- board_folder(\"~/Dropbox\") # share data with others using dropbox board <- board_folder(\"Z:\\\\my-team\\pins\") # share data using a shared network drive board <- board_rsconnect() # share data with RStudio Connect"},{"path":"/dev/articles/pins.html","id":"reading-and-writing-data","dir":"Articles","previous_headings":"","what":"Reading and writing data","title":"Get started with pins","text":"pin board, can write data pin_write(): first argument object save (usually data frame, can R object), second argument gives “name” pin. name basically equivalent file name: ’ll use later want read data pin. rule pin name can’t contain slashes. can see output, pins chosen save data .rds file. can choose another option depending goals: type = \"rds\" uses writeRDS() create binary R data file. can save R object ’s readable R, languages. type = \"csv\" uses write.csv() create .csv file. CSVs can read application, support simple columns (e.g. numbers, strings, dates), can take lot disk space, can slow read. type = \"arrow\" uses arrow::write_feather() create arrow/feather file. Arrow modern, language-independent, high-performance file format designed data science. every tool can read arrow files, support growing rapidly. type = \"json\" uses jsonlite::write_json() create .json file. Pretty much every programming language can read json files, work well nested lists. ’ve pinned object, can read back pin_read(): don’t need supply file type reading data pin pins automatically stores file type metadata, topic next section. Note data lives elsewhere, pins takes care downloading caching ’s re-downloaded needed. said, boards transmit pins HTTP, going slow possibly unreliable large pins. general rule thumb, don’t recommend using pins files 500 MB. find routinely pinning data larger , might need reconsider data engineering pipeline.","code":"mtcars <- tibble::as_tibble(mtcars) board %>% pin_write(mtcars, \"mtcars\") #> Guessing `type = 'rds'` #> Creating new version '20120304T050607Z-2f9b5' #> Writing to pin 'mtcars' board %>% pin_read(\"mtcars\") #> # A tibble: 32 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # … with 22 more rows"},{"path":"/dev/articles/pins.html","id":"metadata","dir":"Articles","previous_headings":"","what":"Metadata","title":"Get started with pins","text":"Every pin accompanied metadata can access pin_meta(): shows metadata ’s generated default. includes: title, brief textual description dataset. optional description, can provide details. date-time pin created. file_size, bytes, underlying files. unique pin_hash can supply pin_read() ensure ’re reading exactly data expect. creating pin, can override default description provide additional metadata stored data: ’ll best keep automatically generated metadata consistent time, ’d recommend manually capturing anything really care metadata.","code":"board %>% pin_meta(\"mtcars\") #> List of 10 #>  $ file       : chr \"mtcars.rds\" #>  $ file_size  : 'fs_bytes' int 3.12K #>  $ pin_hash   : chr \"2f9b568eb4365daf\" #>  $ type       : chr \"rds\" #>  $ title      : chr \"mtcars: a pinned 32 x 11 data frame\" #>  $ description: NULL #>  $ created    : POSIXct[1:1], format: \"2021-08-26 18:34:00\" #>  $ api_version: num 1 #>  $ user       : list() #>  $ local      :List of 2 #>   ..$ dir    : 'fs_path' chr \"/tmp/RtmpSFHmsR/pins-2ef59a0fa19/mtcars/20120304T050607Z-2f9b5\" #>   ..$ version: chr \"20120304T050607Z-2f9b5\" board %>% pin_write(mtcars,    description = \"Data extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973–74 models).\",   metadata = list(     source = \"Henderson and Velleman (1981), Building multiple regression models interactively. Biometrics, 37, 391–411.\"   ) ) #> Using `name = 'mtcars'` #> Guessing `type = 'rds'` #> Replacing version '20120304T050607Z-2f9b5' with '20120304T050607Z-2f9b5' #> Writing to pin 'mtcars' board %>% pin_meta(\"mtcars\") #> List of 10 #>  $ file       : chr \"mtcars.rds\" #>  $ file_size  : 'fs_bytes' int 3.12K #>  $ pin_hash   : chr \"2f9b568eb4365daf\" #>  $ type       : chr \"rds\" #>  $ title      : chr \"mtcars: a pinned 32 x 11 data frame\" #>  $ description: chr \"Data extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobi\"| __truncated__ #>  $ created    : POSIXct[1:1], format: \"2021-08-26 18:34:00\" #>  $ api_version: num 1 #>  $ user       :List of 1 #>   ..$ source: chr \"Henderson and Velleman (1981), Building multiple regression models interactively. Biometrics, 37, 391–411.\" #>  $ local      :List of 2 #>   ..$ dir    : 'fs_path' chr \"/tmp/RtmpSFHmsR/pins-2ef59a0fa19/mtcars/20120304T050607Z-2f9b5\" #>   ..$ version: chr \"20120304T050607Z-2f9b5\""},{"path":"/dev/articles/pins.html","id":"versioning","dir":"Articles","previous_headings":"","what":"Versioning","title":"Get started with pins","text":"many situations ’s useful version pins, writing existing pin replace existing data, instead adds new copy. two ways turn versioning : create board can turn versioning every pin board: write pin, can specifically request versioning turned pin: boards versioning default. primary exception board_folder() since stores data computer, ’s automated way clean data saving. turned versioning , every pin_write() create new version: can list available versions pin_versions(): (Pins currently provide tool remove old versions, likely implemented future.) default, pin_read() return recent version: can request older version supplying version argument:","code":"board2 <- board_temp(versioned = TRUE) board2 <- board_temp() board2 %>% pin_write(mtcars, versioned = TRUE) board2 <- board_temp(versioned = TRUE)  board2 %>% pin_write(1:5, name = \"x\", type = \"rds\") #> Creating new version '20120304T050607Z-ab444' #> Writing to pin 'x' board2 %>% pin_write(2:6, name = \"x\", type = \"rds\") #> Creating new version '20120304T050607Z-a077a' #> Writing to pin 'x' board2 %>% pin_write(3:7, name = \"x\", type = \"rds\") #> Creating new version '20120304T050607Z-0a284' #> Writing to pin 'x' board2 %>% pin_versions(\"x\") #> # A tibble: 3 × 3 #>   version                created             hash  #>   <chr>                  <dttm>              <chr> #> 1 20120304T050607Z-0a284 2012-03-04 05:06:00 0a284 #> 2 20120304T050607Z-a077a 2012-03-04 05:06:00 a077a #> 3 20120304T050607Z-ab444 2012-03-04 05:06:00 ab444 board2 %>% pin_read(\"x\") #> [1] 1 2 3 4 5 board2 %>% pin_read(\"x\", version = \"20210520T173110Z-49519\")"},{"path":"/dev/articles/pins.html","id":"reading-and-writing-files","dir":"Articles","previous_headings":"","what":"Reading and writing files","title":"Get started with pins","text":"far ’ve focussed pin_write() pin_read() work R objects. pins also provides lower-level pin_upload() pin_download() work files disk. can use share types data otherwise unsupported pins. pin_upload() works like pin_write() instead R object give vector paths. ’ll start creating files temp directory: Now can upload board: pin_download() returns vector paths: ’s now job handle . treat paths internal implementation details — never modify never save use outside pins. Note can’t pin_read() something pinned pin_upload(): can pin_download() something ’ve pinned pin_write():","code":"paths <- file.path(tempdir(), c(\"mtcars.csv\", \"alphabet.txt\")) write.csv(mtcars, paths[[1]]) writeLines(letters, paths[[2]]) board %>% pin_upload(paths, \"example\") #> Creating new version '20120304T050607Z-e9d42' board %>% pin_download(\"example\") #> [1] \"/tmp/RtmpSFHmsR/pins-2ef59a0fa19/example/20120304T050607Z-e9d42/mtcars.csv\"   #> [2] \"/tmp/RtmpSFHmsR/pins-2ef59a0fa19/example/20120304T050607Z-e9d42/alphabet.txt\" board %>% pin_read(\"example\") #> Error: Pin created with `pin_upload()` #> ℹ Retrieve uploaded paths with `pin_download()` board %>% pin_download(\"mtcars\") #> [1] \"/tmp/RtmpSFHmsR/pins-2ef59a0fa19/mtcars/20120304T050607Z-2f9b5/mtcars.rds\""},{"path":"/dev/articles/pins.html","id":"caching","dir":"Articles","previous_headings":"","what":"Caching","title":"Get started with pins","text":"primary purpose pins make easy share data. pins also designed help spend little time possible downloading data. pin_read() pin_download() automatically cache remote pins: maintain local copy data (’s fast) always check ’s --date (analysis doesn’t use stale data). Wouldn’t nice take advantage feature dataset internet? ’s idea behind board_url() — can assemble board datasets, wherever live internet. example, code create board containing single pin, penguins, refers fun data found GitHub: can read data combining pin_download() read.csv()1: board_url() requires bit work compared using download.file() similar big payoff: data re-downloaded changes.","code":"my_data <- board_url(c(   \"penguins\" = \"https://raw.githubusercontent.com/allisonhorst/palmerpenguins/master/inst/extdata/penguins_raw.csv\" )) my_data %>%   pin_download(\"penguins\") %>%    read.csv(check.names = FALSE) %>%    tibble::as_tibble() #> # A tibble: 344 × 17 #>    studyName `Sample Number` Species       Region Island Stage   `Individual ID` #>    <chr>               <int> <chr>         <chr>  <chr>  <chr>   <chr>           #>  1 PAL0708                 1 Adelie Pengu… Anvers Torge… Adult,… N1A1            #>  2 PAL0708                 2 Adelie Pengu… Anvers Torge… Adult,… N1A2            #>  3 PAL0708                 3 Adelie Pengu… Anvers Torge… Adult,… N2A1            #>  4 PAL0708                 4 Adelie Pengu… Anvers Torge… Adult,… N2A2            #>  5 PAL0708                 5 Adelie Pengu… Anvers Torge… Adult,… N3A1            #>  6 PAL0708                 6 Adelie Pengu… Anvers Torge… Adult,… N3A2            #>  7 PAL0708                 7 Adelie Pengu… Anvers Torge… Adult,… N4A1            #>  8 PAL0708                 8 Adelie Pengu… Anvers Torge… Adult,… N4A2            #>  9 PAL0708                 9 Adelie Pengu… Anvers Torge… Adult,… N5A1            #> 10 PAL0708                10 Adelie Pengu… Anvers Torge… Adult,… N5A2            #> # … with 334 more rows, and 10 more variables: Clutch Completion <chr>, #> #   Date Egg <chr>, Culmen Length (mm) <dbl>, Culmen Depth (mm) <dbl>, #> #   Flipper Length (mm) <int>, Body Mass (g) <int>, Sex <chr>, #> #   Delta 15 N (o/oo) <dbl>, Delta 13 C (o/oo) <dbl>, Comments <chr>"},{"path":"/dev/articles/rsc.html","id":"sharing-tidied-data","dir":"Articles","previous_headings":"","what":"Sharing tidied data","title":"RStudio Connect","text":"Imagine ’re interested ’s going news, ’ve written little code scrape BBC world news feed turn tidy dataset: Wouldn’t nice spare colleagues work reproducing data, provide directly tidy tibble? ’s easy pins: open pin RSC (e.g. running board_rsc %>% pin_browse(\"news_total\")), ’ll see metadata pin, preview data, control panel allows control can see data. Assuming ’ve given colleagues access, can now easily pull data analysis:","code":"library(xml2)  if (interactive()) {   xml <- read_xml(\"http://feeds.bbci.co.uk/news/rss.xml\")   } else {   # Read a saved version of the data to keep this vignette reproducible   xml <- read_xml(\"bbc-news.xml\")   }  items <- xml %>% xml_find_all(\"//item\")  bbc_news <- tibble::tibble(   title = items %>% xml_find_first(\"./title\") %>% xml_text(),   date = items %>% xml_find_first(\"./pubDate\") %>% xml_text(),   url = items %>% xml_find_first(\"./guid\") %>% xml_text() ) bbc_news #> # A tibble: 71 × 3 #>    title                              date            url                        #>    <chr>                              <chr>           <chr>                      #>  1 Diana interview: PM concerned aft… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  2 Covid in Scotland: Glasgow to be … Fri, 21 May 20… https://www.bbc.co.uk/new… #>  3 Prince Harry says heavy drinking … Fri, 21 May 20… https://www.bbc.co.uk/new… #>  4 Coronavirus: Spain to lift restri… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  5 Diana interview: Whistleblower wa… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  6 Mayhill: Swansea rioters face rob… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  7 UK to offer Australia tariff-free… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  8 Leonard Blavatnik named UK's rich… Fri, 21 May 20… https://www.bbc.co.uk/new… #>  9 Lady Gaga had a 'psychotic break'… Fri, 21 May 20… https://www.bbc.co.uk/new… #> 10 Big cats seized from park belongi… Fri, 21 May 20… https://www.bbc.co.uk/new… #> # … with 61 more rows board_rsc <- board_rsconnect() board_rsc %>% pin_write(bbc_news) board_rsc <- board_rsconnect() board_rsc %>% pin_read(\"your_name/bbc_news\")"},{"path":"/dev/articles/rsc.html","id":"automating","dir":"Articles","previous_headings":"","what":"Automating","title":"RStudio Connect","text":"underlying data changing regularly, pinned data change run pin_write(). Wouldn’t great automate process? One way RSC’s scheduled reports. First, take code put Rmd: publish RSC, schedule run often like. Assuming RSC 1.8.8 later don’t need provide arguments board_rsconnect(); pins automatically publish Connect instance ’s running report.","code":"--- title: BBC news ---  ```{r} library(pins) library(xml2)  xml <- read_xml(\"http://feeds.bbci.co.uk/news/rss.xml\")   items <- xml %>% xml_find_all(\"//item\")  bbc_news <- tibble::tibble(   title = items %>% xml_find_first(\"./title\") %>% xml_text(),   date = items %>% xml_find_first(\"./pubDate\") %>% xml_text(),   url = items %>% xml_find_first(\"./guid\") %>% xml_text() )  board_rsc <- board_rsconnect() board_rsc %>% pin_write(bbc_news) ```  ```{r} bbc_news ```"},{"path":"/dev/articles/rsc.html","id":"shiny-apps","dir":"Articles","previous_headings":"","what":"Shiny apps","title":"RStudio Connect","text":"’re using automatically updated data Shiny app, can use pin_reactive_read() create reactive dependency app automatically update shortly data changes: deploy app watch scheduled reported runs, ’ll see data update automatically.","code":"library(shiny) library(pins)  board <- board_rsconnect()  ui <- fluidPage(   titlePanel(\"News from the BBC\"),   htmlOutput(\"news\") )  server <- function(input, output, session) {   news <- board %>% pin_reactive_read(\"hadley/bbc_news\")      output$news <- renderUI({     title <- htmltools::htmlEscape(news()$title)     links <- paste0(\"<a href='\", news()$url, \"'>\", title, \"<\/a>\")     bullets <- paste0(\"  <li>\", links, \"<\/li>\", collapse = \"\\n\")     HTML(paste0(\"<ul>\", bullets, \"<\/ul>\"))   }) }  shinyApp(ui, server)"},{"path":"/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors","text":"Hadley Wickham. Author, maintainer. Javier Luraschi. Author. RStudio. Copyright holder.","code":""},{"path":"/dev/index.html","id":"pins-","dir":"","previous_headings":"","what":"Pin, Discover and Share Resources","title":"Pin, Discover and Share Resources","text":"pins package publishes data, models, R objects, making easy share across projects colleagues. can pin objects variety pin boards, including folders (share networked drive services like DropBox), RStudio Connect, Amazon S3, Azure blob storage. Pins can automatically versioned, making straightforward track changes, re-run analyses historical data, undo mistakes. pins 1.0.0 includes new explicit API greater support versioning. legacy API (pin(), pin_get(), board_register()) continue work, new features implemented new API, encourage switch modern API quickly possible. Learn vignette(\"pins-legacy\").","code":""},{"path":"/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Pin, Discover and Share Resources","text":"try development version pins (become pins 1.0.0 released), ’ll need install GitHub: discover breaks existing code, please let us know revert released version:","code":"remotes::install_github(\"rstudio/pins\") install.packages(\"pins\")"},{"path":"/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Pin, Discover and Share Resources","text":"use pins package, must first create pin board. good place start board_folder(), stores pins directory specify. ’ll use special version board_folder() called board_temp() creates temporary board ’s automatically deleted R session ends. great examples, obviously shouldn’t use real work! can “pin” (save) data board pin_write(). takes three arguments: board pin , object, name: can see, data saved .rds default, depending ’re saving else want read , might use type argument instead save csv, json, arrow file. can later retrieve pinned data pin_read(): board computer good place start, real power pins comes use board ’s shared multiple people. get started, can use board_folder() directory shared drive dropbox, use RStudio Connect can use board_rsconnect(): , someone else (automated Rmd report) can read use pin: can easily control gets access data using RStudio Connection permissions pane. pins package also includes boards allow share data services like Amazon’s S3 (board_s3()) Azure’s blob storage (board_azure()). Learn vignette(\"pins\").","code":"library(pins)  board <- board_temp() board #> Pin board <pins_board_folder> #> Path: '/tmp/RtmpnTsA83/pins-fb066b65d1e' #> Cache size: 0 board %>% pin_write(head(mtcars), \"mtcars\") #> Guessing `type = 'rds'` #> Creating new version '20210826T183040Z-f8797' board %>% pin_read(\"mtcars\") #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 board <- board_rsconnect() #> Connecting to RSC 1.9.0.1 at <https://connect.rstudioservices.com> board %>% pin_write(tidy_sales_data, \"sales-summary\", type = \"rds\") #> Writing to pin 'hadley/sales-summary' board <- board_rsconnect() board %>% pin_read(\"hadley/sales-summary\")"},{"path":"/dev/reference/board_azure.html","id":null,"dir":"Reference","previous_headings":"","what":"Use an Azure Blob Storage Container as a board — board_azure","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"Pin data container Azure's blog storage using AzureStor package.","code":""},{"path":"/dev/reference/board_azure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"","code":"board_azure(container, n_processes = 10, versioned = TRUE, cache = NULL)"},{"path":"/dev/reference/board_azure.html","id":"pkg-arg-container","dir":"Reference","previous_headings":"","what":"container (argument)","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"container azure storage container created AzureStor::blob_container() similar.","code":""},{"path":"/dev/reference/board_azure.html","id":"pkg-arg-n_processes","dir":"Reference","previous_headings":"","what":"n_processes (argument)","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"n_processes Maximum number processes used parallel uploads/downloads.","code":""},{"path":"/dev/reference/board_azure.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"versioned board registered support versions?","code":""},{"path":"/dev/reference/board_azure.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Use an Azure Blob Storage Container as a board — board_azure","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/board_cache_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Default Cache Path — board_cache_path","title":"Retrieve Default Cache Path — board_cache_path","text":"Retrieves default path used cache boards pins. Makes use rappdirs package use cache folders defined OS.","code":""},{"path":"/dev/reference/board_cache_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Default Cache Path — board_cache_path","text":"","code":"board_cache_path(name)"},{"path":"/dev/reference/board_cache_path.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Retrieve Default Cache Path — board_cache_path","text":"name Board name","code":""},{"path":"/dev/reference/board_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to/disconnect from a board — board_connect","title":"Connect to/disconnect from a board — board_connect","text":"Activate/deactivate RStudio's connection pane","code":""},{"path":"/dev/reference/board_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to/disconnect from a board — board_connect","text":"","code":"board_connect(board, code, ...)  board_disconnect(name, ...)"},{"path":"/dev/reference/board_connect.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Connect to/disconnect from a board — board_connect","text":"board name board activate.","code":""},{"path":"/dev/reference/board_connect.html","id":"pkg-arg-code","dir":"Reference","previous_headings":"","what":"code (argument)","title":"Connect to/disconnect from a board — board_connect","text":"code code used registere board.","code":""},{"path":"/dev/reference/board_connect.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Connect to/disconnect from a board — board_connect","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/board_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a local folder as board — board_folder","title":"Use a local folder as board — board_folder","text":"board_folder() creates board inside folder. can use share files using folder shared network drive inside DropBox. board_local() creates board system data directory. useful want share pins R sessions computer, care data lives. board_temp() creates temporary board lives session specific temporary directory. automatically deleted current R session ends. useful examples tests.","code":""},{"path":"/dev/reference/board_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a local folder as board — board_folder","text":"","code":"board_folder(path, name = \"folder\", versioned = FALSE)  board_local(versioned = FALSE)  board_temp(name = \"temp\", versioned = FALSE)"},{"path":"/dev/reference/board_folder.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Use a local folder as board — board_folder","text":"path Path directory store pins. created already exist.","code":""},{"path":"/dev/reference/board_folder.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Use a local folder as board — board_folder","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/board_folder.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Use a local folder as board — board_folder","text":"versioned board registered support versions?","code":""},{"path":"/dev/reference/board_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Board registry (legacy API) — board_register","title":"Board registry (legacy API) — board_register","text":"legacy pins API uses board registry, first register board refer name calls pin functions.","code":""},{"path":"/dev/reference/board_register.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Board registry (legacy API) — board_register","text":"","code":"board_register(   board,   name = NULL,   cache = board_cache_path(name),   versions = NULL,   ... )  board_register_rsconnect(   name = \"rsconnect\",   server = NULL,   account = NULL,   key = NULL,   output_files = FALSE,   cache = board_cache_path(name),   ... )  board_deregister(name, ...)  board_default()  board_list()  board_get(name)"},{"path":"/dev/reference/board_rsconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Use RStudio Connect as board — board_rsconnect","title":"Use RStudio Connect as board — board_rsconnect","text":"use RStudio Connect board, need first authenticate. easiest way launching Tools - Global Options - Publishing - Connect, follow instructions. can share pins others RStudio Connect changing viewers document specific users groups. accomplished opening new published pin changing access settings tab. shared pin, automatically available others.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use RStudio Connect as board — board_rsconnect","text":"","code":"board_rsconnect(   auth = c(\"auto\", \"envvar\", \"rsconnect\"),   server = NULL,   account = NULL,   key = NULL,   output_files = FALSE,   cache = NULL,   name = \"rsconnect\",   versioned = TRUE,   use_cache_on_failure = is_interactive(),   versions = deprecated() )"},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-auth","dir":"Reference","previous_headings":"","what":"auth (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"auth two approaches auth: can either use \"envvars\" CONNECT_API_KEY CONNECT_SERVER rsconnect package. default auto, use environment variables available, rsconnect .","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-server","dir":"Reference","previous_headings":"","what":"server (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"server auth = \"envvar\" full url server, like http://server.rstudio.com/rsc https://connect.rstudio.com/. auth = 'rsconnect' host name used disambiguate RSC accounts, like server.rstudio.com connect.rstudio.com.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-account","dir":"Reference","previous_headings":"","what":"account (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"account user name used disambiguate multiple RSC accounts","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-key","dir":"Reference","previous_headings":"","what":"key (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"key RStudio Connect API key.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-output_files","dir":"Reference","previous_headings":"","what":"output_files (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"output_files `r lifecycle::badge(\"deprecated\") longer supported.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"versioned board registered support versions?","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-use_cache_on_failure","dir":"Reference","previous_headings":"","what":"use_cache_on_failure (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"use_cache_on_failure pin fails download, ok use last cached version? Defaults is_interactive() robust poor internet connectivity exploring interactively, get clear errors code deployed.","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"pkg-arg-versions","dir":"Reference","previous_headings":"","what":"versions (argument)","title":"Use RStudio Connect as board — board_rsconnect","text":"versions board registered support versions?","code":""},{"path":"/dev/reference/board_rsconnect.html","id":"section-public-pins","dir":"Reference","previous_headings":"","what":"Public pins","title":"Use RStudio Connect as board — board_rsconnect","text":"RSC instance allows , can share pin publicly setting access type :  (can also RSC setting \"Access\" \"Anyone - login required\") Now anyone can read pin board_url():  can find URL pin pin_browse().","code":"board %>% pin_write(my_df, access_type = \"all\") board <- board_url(c(   my_df = \"https://connect.rstudioservices.com/content/3004/\" )) board %>% pin_read(\"my_df\")"},{"path":"/dev/reference/board_s3.html","id":null,"dir":"Reference","previous_headings":"","what":"Use an S3 bucket as a board — board_s3","title":"Use an S3 bucket as a board — board_s3","text":"Pin data bucket Amazon's S3 service, using paws.storage package.","code":""},{"path":"/dev/reference/board_s3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use an S3 bucket as a board — board_s3","text":"","code":"board_s3(   bucket,   versioned = TRUE,   access_key = NULL,   secret_access_key = NULL,   session_token = NULL,   credential_expiration = NULL,   profile = NULL,   region = NULL,   endpoint = NULL,   cache = NULL )"},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-bucket","dir":"Reference","previous_headings":"","what":"bucket (argument)","title":"Use an S3 bucket as a board — board_s3","text":"bucket Bucket name.","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Use an S3 bucket as a board — board_s3","text":"versioned board registered support versions?","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-access_key, secret_access_key, session_token, credential_expiration","dir":"Reference","previous_headings":"","what":"access_key, secret_access_key, session_token, credential_expiration (argument)","title":"Use an S3 bucket as a board — board_s3","text":"access_key, secret_access_key, session_token, credential_expiration Manually control authentication. See documentation details.","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-profile","dir":"Reference","previous_headings":"","what":"profile (argument)","title":"Use an S3 bucket as a board — board_s3","text":"profile Role use AWS shared credentials/config file.","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-region","dir":"Reference","previous_headings":"","what":"region (argument)","title":"Use an S3 bucket as a board — board_s3","text":"region AWS region. specified, read AWS_REGION, AWS config file.","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-endpoint","dir":"Reference","previous_headings":"","what":"endpoint (argument)","title":"Use an S3 bucket as a board — board_s3","text":"endpoint AWS endpoint use; usually generated automatically region.","code":""},{"path":"/dev/reference/board_s3.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Use an S3 bucket as a board — board_s3","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/board_s3.html","id":"section-authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Use an S3 bucket as a board — board_s3","text":"board_s3() powered paws package provides wide range authetication options, documented https://github.com/paws-r/paws/blob/main/docs/credentials.md. brief, four main options tried order: access_key secret_access_key arguments function. temporary session token, also need supply session_token credential_expiration. (recommended since secret_access_key recorded .Rhistory) AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY env vars. (AWS_SESSION_TOKEN AWS_CREDENTIAL_EXPIRATION env vars temporary session token) AWS shared credential file, ~/.aws/credentials: \"default\" profile used supply access key secret access key described . Otherwise can use profile argument use profile choice. Automatic authentication EC2 instance container IAM role. See paws documentation unusual options including getting credentials command line process, picking role running inside EC2 instance, using role another profile, using multifactor authentication.","code":"[profile-name] aws_access_key_id=your AWS access key aws_secret_access_key=your AWS secret key"},{"path":"/dev/reference/board_s3.html","id":"section-caveats","dir":"Reference","previous_headings":"","what":"Caveats","title":"Use an S3 bucket as a board — board_s3","text":"point bucket created pins, functions like pins_list() work, return useful output.","code":""},{"path":"/dev/reference/board_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Board — board_test","title":"Test Board — board_test","text":"Tests particular board, useful creating new boards.","code":""},{"path":"/dev/reference/board_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Board — board_test","text":"","code":"board_test(board, exclude = list(), suite = c(\"default\", \"versions\"))"},{"path":"/dev/reference/board_test.html","id":"pkg-arg-exclude","dir":"Reference","previous_headings":"","what":"exclude (argument)","title":"Test Board — board_test","text":"exclude Names tests exclude form test.","code":""},{"path":"/dev/reference/board_test.html","id":"pkg-arg-suite","dir":"Reference","previous_headings":"","what":"suite (argument)","title":"Test Board — board_test","text":"suite test suite run, currently \"versions\" default supported.","code":""},{"path":"/dev/reference/board_test.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Test Board — board_test","text":"name name board test.","code":""},{"path":"/dev/reference/board_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a vector of URLs as a board — board_url","title":"Use a vector of URLs as a board — board_url","text":"board_url() lets build board individual urls. useful pin_download() pin_get() cached - re-download data changed last time downloaded (using tools HTTP caching). also protected vagaries internet; fresh download fails, get previously cached result warning. board_url() read currently support versions.","code":""},{"path":"/dev/reference/board_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a vector of URLs as a board — board_url","text":"","code":"board_url(urls, cache = NULL, use_cache_on_failure = is_interactive())"},{"path":"/dev/reference/board_url.html","id":"pkg-arg-urls","dir":"Reference","previous_headings":"","what":"urls (argument)","title":"Use a vector of URLs as a board — board_url","text":"urls named character vector URLs URL ends /, board_url look data.txt provides metadata. easiest way generate file upload pin directory created board_folder().","code":""},{"path":"/dev/reference/board_url.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Use a vector of URLs as a board — board_url","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/board_url.html","id":"pkg-arg-use_cache_on_failure","dir":"Reference","previous_headings":"","what":"use_cache_on_failure (argument)","title":"Use a vector of URLs as a board — board_url","text":"use_cache_on_failure pin fails download, ok use last cached version? Defaults is_interactive() robust poor internet connectivity exploring interactively, get clear errors code deployed.","code":""},{"path":"/dev/reference/cache_browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache management — cache_browse","title":"Cache management — cache_browse","text":"boards maintain local cache reading pin changed since last time read , can rapidly retrieved local cache. functions help manage cache. cache_browse(): open cache directory interactive exploration. cache_info(): report much disk space board's cache uses. cache_prune(): delete pin versions used days (asked confirm deletion happens). general, real harm deleting cached pins, re-downloaded needed. one exception legacy_local() mistakenly stored pinned data cache directory; touch directory.","code":""},{"path":"/dev/reference/cache_browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache management — cache_browse","text":"","code":"cache_browse()  cache_info()  cache_prune(days = 30)"},{"path":"/dev/reference/cache_browse.html","id":"pkg-arg-days","dir":"Reference","previous_headings":"","what":"days (argument)","title":"Cache management — cache_browse","text":"days Number days preserve cached data; pin versions older days removed.","code":""},{"path":"/dev/reference/custom-boards-utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Boards Utilities — board_local_storage","title":"Custom Boards Utilities — board_local_storage","text":"set utilities used implementing custom boards.","code":""},{"path":"/dev/reference/custom-boards-utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Boards Utilities — board_local_storage","text":"","code":"board_local_storage(...)"},{"path":"/dev/reference/custom-boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Boards — board_pin_create","title":"Custom Boards — board_pin_create","text":"Family functions meant used implement custom boards extensions, used users.","code":""},{"path":"/dev/reference/custom-boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Boards — board_pin_create","text":"","code":"board_pin_create(board, path, name, metadata, ...)  board_initialize(board, ...)  board_browse(board, ...)  board_desc(board, ...)  board_pin_get(board, name, ...)  board_pin_remove(board, name, ...)  board_pin_find(board, text, ...)  board_pin_versions(board, name, ...)"},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Custom Boards — board_pin_create","text":"board board extend, retrieved board_get().","code":""},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Custom Boards — board_pin_create","text":"path path store pin.","code":""},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Custom Boards — board_pin_create","text":"name name pin.","code":""},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Custom Boards — board_pin_create","text":"metadata list metadata associated pin.","code":""},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Custom Boards — board_pin_create","text":"... Additional parameteres.","code":""},{"path":"/dev/reference/custom-boards.html","id":"pkg-arg-text","dir":"Reference","previous_headings":"","what":"text (argument)","title":"Custom Boards — board_pin_create","text":"text text patteren find pin.","code":""},{"path":"/dev/reference/custom-pins.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Pins — pin_load","title":"Custom Pins — pin_load","text":"Family functions meant used implement custom pin extensions, used users.","code":""},{"path":"/dev/reference/custom-pins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Pins — pin_load","text":"","code":"pin_load(path, ...)  board_pin_store(   board,   path,   name,   pin_metadata,   extract = TRUE,   retrieve = TRUE,   zip = FALSE,   cache = TRUE,   metadata = NULL,   custom_metadata = NULL,   ... )"},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Custom Pins — pin_load","text":"path path store.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Custom Pins — pin_load","text":"... Additional parameteres.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Custom Pins — pin_load","text":"board board extended, retrieved board_get().","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Custom Pins — pin_load","text":"name name pin.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-pin_metadata","dir":"Reference","previous_headings":"","what":"pin_metadata (argument)","title":"Custom Pins — pin_load","text":"pin_metadata list pin metadata describing pin. Must contain type description.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-retrieve","dir":"Reference","previous_headings":"","what":"retrieve (argument)","title":"Custom Pins — pin_load","text":"retrieve pin retrieved created? Defaults TRUE.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-custom_metadata","dir":"Reference","previous_headings":"","what":"custom_metadata (argument)","title":"Custom Pins — pin_load","text":"custom_metadata Deprecated. Please use metadata instead.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-description","dir":"Reference","previous_headings":"","what":"description (argument)","title":"Custom Pins — pin_load","text":"description text patteren find pin.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-type","dir":"Reference","previous_headings":"","what":"type (argument)","title":"Custom Pins — pin_load","text":"type type pin stored.","code":""},{"path":"/dev/reference/custom-pins.html","id":"pkg-arg-metadat","dir":"Reference","previous_headings":"","what":"metadat (argument)","title":"Custom Pins — pin_load","text":"metadat Additional user supplied metadata.","code":""},{"path":"/dev/reference/legacy_azure.html","id":null,"dir":"Reference","previous_headings":"","what":"Azure board (legacy API) — legacy_azure","title":"Azure board (legacy API) — legacy_azure","text":"use Microsoft Azure Storage board, need Azure Storage account, Azure Storage container, Azure Storage key. can sign-create portal.azure.com.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azure board (legacy API) — legacy_azure","text":"","code":"legacy_azure(   container = Sys.getenv(\"AZURE_STORAGE_CONTAINER\"),   account = Sys.getenv(\"AZURE_STORAGE_ACCOUNT\"),   key = Sys.getenv(\"AZURE_STORAGE_KEY\"),   cache = NULL,   name = \"azure\",   ... )  board_register_azure(   name = \"azure\",   container = Sys.getenv(\"AZURE_STORAGE_CONTAINER\"),   account = Sys.getenv(\"AZURE_STORAGE_ACCOUNT\"),   key = Sys.getenv(\"AZURE_STORAGE_KEY\"),   cache = board_cache_path(name),   path = NULL,   ... )"},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-container","dir":"Reference","previous_headings":"","what":"container (argument)","title":"Azure board (legacy API) — legacy_azure","text":"container name Azure Storage container.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-account","dir":"Reference","previous_headings":"","what":"account (argument)","title":"Azure board (legacy API) — legacy_azure","text":"account name Azure Storage account.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-key","dir":"Reference","previous_headings":"","what":"key (argument)","title":"Azure board (legacy API) — legacy_azure","text":"key access key Azure Storage container. can find \"Access keys\" storage account settings. key equivalent password, generally stored script. easiest alternative store AZURE_STORAGE_KEY environment variable, legacy_azure() use default.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Azure board (legacy API) — legacy_azure","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Azure board (legacy API) — legacy_azure","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Azure board (legacy API) — legacy_azure","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_azure.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Azure board (legacy API) — legacy_azure","text":"path Subdirectory within url","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":null,"dir":"Reference","previous_headings":"","what":"Remote ","title":"Remote ","text":"Use board website uses data.txt specification. data.txt file YAML provides basic metadata directory files.","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remote ","text":"","code":"legacy_datatxt(   url,   headers = NULL,   cache = board_cache_path(name),   needs_index = TRUE,   browse_url = url,   index_updated = NULL,   index_randomize = FALSE,   path = NULL,   versions = FALSE,   name = NULL,   ... )  board_register_datatxt(   url,   name = NULL,   headers = NULL,   cache = board_cache_path(name),   ... )"},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-url","dir":"Reference","previous_headings":"","what":"url (argument)","title":"Remote ","text":"url Path data.txt file directory containing .","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-headers","dir":"Reference","previous_headings":"","what":"headers (argument)","title":"Remote ","text":"headers Optional list headers include function generate .","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Remote ","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-needs_index","dir":"Reference","previous_headings":"","what":"needs_index (argument)","title":"Remote ","text":"needs_index board index file?","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-browse_url","dir":"Reference","previous_headings":"","what":"browse_url (argument)","title":"Remote ","text":"browse_url currently used","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-index_updated","dir":"Reference","previous_headings":"","what":"index_updated (argument)","title":"Remote ","text":"index_updated Callback function used update index","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-index_randomize","dir":"Reference","previous_headings":"","what":"index_randomize (argument)","title":"Remote ","text":"index_randomize retrieving data.txt parameter random query string defeat caching?","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Remote ","text":"path Subdirectory within url","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-versions","dir":"Reference","previous_headings":"","what":"versions (argument)","title":"Remote ","text":"versions board registered support versions?","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Remote ","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_datatxt.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Remote ","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":null,"dir":"Reference","previous_headings":"","what":"DigitalOcean board (legacy API) — legacy_dospace","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"use DigitalOcean Spaces board, first need DigitalOcean space storage key. can sign-create digitalocean.com.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"","code":"legacy_dospace(   space = Sys.getenv(\"DO_SPACE\"),   key = Sys.getenv(\"DO_ACCESS_KEY_ID\"),   secret = Sys.getenv(\"DO_SECRET_ACCESS_KEY\"),   datacenter = Sys.getenv(\"DO_DATACENTER\"),   cache = NULL,   host = \"digitaloceanspaces.com\",   name = \"dospace\",   ... )  board_register_dospace(   name = \"dospace\",   space = Sys.getenv(\"DO_SPACE\"),   key = Sys.getenv(\"DO_ACCESS_KEY_ID\"),   secret = Sys.getenv(\"DO_SECRET_ACCESS_KEY\"),   datacenter = Sys.getenv(\"DO_DATACENTER\"),   cache = board_cache_path(name),   host = \"digitaloceanspaces.com\",   path = NULL,   ... )"},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-space","dir":"Reference","previous_headings":"","what":"space (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"space name DigitalOcean space.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-key, secret","dir":"Reference","previous_headings":"","what":"key, secret (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"key, secret key secret space. can create key secret \"Spaces access keys\" API settings. secret equivalent password, generally stored script. easiest alternative store DO_SECRET_ACCESS_KEY environment variable, legacy_dospace() use default.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-datacenter","dir":"Reference","previous_headings":"","what":"datacenter (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"datacenter datacenter name.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-host","dir":"Reference","previous_headings":"","what":"host (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"host host use storage, defaults \"digitaloceanspaces.com\".","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_dospace.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"DigitalOcean board (legacy API) — legacy_dospace","text":"path Subdirectory within url","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Google Cloud board (legacy API) — legacy_gcloud","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"use Google Cloud Storage board, first need Google Cloud Storage account, Google Storage bucket, access token Google Cloud SDK properly installed configured. can sign-create https://console.cloud.google.com","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"","code":"legacy_gcloud(   bucket = Sys.getenv(\"GCLOUD_STORAGE_BUCKET\"),   token = NULL,   cache = NULL,   name = \"gcloud\",   ... )  board_register_gcloud(   name = \"gcloud\",   bucket = Sys.getenv(\"GCLOUD_STORAGE_BUCKET\"),   token = NULL,   cache = board_cache_path(name),   path = NULL,   ... )"},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-bucket","dir":"Reference","previous_headings":"","what":"bucket (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"bucket name Google Cloud Storage bucket. Defaults GCLOUD_STORAGE_BUCKET environment variable.","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-token","dir":"Reference","previous_headings":"","what":"token (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"token access token Google Cloud Storage container. Generally, best leave NULL, rely installed Google Cloud SDK handle authentication. want use access token, can retrieve https://developers.google.com/oauthplayground. need authorize \"Google Storage API v1\" scope.","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_gcloud.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Google Cloud board (legacy API) — legacy_gcloud","text":"path Subdirectory within url","code":""},{"path":"/dev/reference/legacy_github.html","id":null,"dir":"Reference","previous_headings":"","what":"GitHub board (legacy API) — legacy_github","title":"GitHub board (legacy API) — legacy_github","text":"use GitHub board, need set authentication. likely just work already use GitHub purposes since pins inspect  GITHUB_PAT environment variable. Otherwise, can follow instructions https://happygitwithr.com/credential-caching.html get set .","code":""},{"path":"/dev/reference/legacy_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GitHub board (legacy API) — legacy_github","text":"","code":"legacy_github(   repo,   branch = NULL,   token = NULL,   path = \"\",   host = \"https://api.github.com\",   name = \"github\",   ... )  board_register_github(   name = \"github\",   repo = NULL,   branch = NULL,   token = NULL,   path = \"\",   host = \"https://api.github.com\",   cache = board_cache_path(name),   ... )"},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-repo","dir":"Reference","previous_headings":"","what":"repo (argument)","title":"GitHub board (legacy API) — legacy_github","text":"repo GitHub repository formatted 'owner/repo'.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-branch","dir":"Reference","previous_headings":"","what":"branch (argument)","title":"GitHub board (legacy API) — legacy_github","text":"branch branch use commit pins. Default, NULL, use main master present.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-token","dir":"Reference","previous_headings":"","what":"token (argument)","title":"GitHub board (legacy API) — legacy_github","text":"token GitHub personal acess token. Defaults env var GITHUB_PAT set.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"GitHub board (legacy API) — legacy_github","text":"path subdirectory repo pins stored.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-host","dir":"Reference","previous_headings":"","what":"host (argument)","title":"GitHub board (legacy API) — legacy_github","text":"host URL GitHub API. need customise use GitHub enterprise, e.g. \"https://yourhostname/api/v3\".","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"GitHub board (legacy API) — legacy_github","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"GitHub board (legacy API) — legacy_github","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_github.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"GitHub board (legacy API) — legacy_github","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_github.html","id":"section-large-files","dir":"Reference","previous_headings":"","what":"Large Files","title":"GitHub board (legacy API) — legacy_github","text":"GitHub repo supports files 25MB size (100MB theory additional overhead using GitHub API). store large files, GitHub recommends storing using GitHub Releases support 2GB files, pins uses. need anything extra happen behind scenes, surprised pins creates releases repo.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":null,"dir":"Reference","previous_headings":"","what":"Kaggle board (legacy API) — legacy_kaggle","title":"Kaggle board (legacy API) — legacy_kaggle","text":"use Kaggle board, need first download token file https://www.kaggle.com//account.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kaggle board (legacy API) — legacy_kaggle","text":"","code":"legacy_kaggle(token = NULL, name = \"kaggle\", ...)  board_register_kaggle(   name = \"kaggle\",   token = NULL,   cache = board_cache_path(name),   ... )"},{"path":"/dev/reference/legacy_kaggle.html","id":"pkg-arg-token","dir":"Reference","previous_headings":"","what":"token (argument)","title":"Kaggle board (legacy API) — legacy_kaggle","text":"token Kaggle token path kaggle.json file, can NULL ~/.kaggle/kaggle.json file already exists.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Kaggle board (legacy API) — legacy_kaggle","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Kaggle board (legacy API) — legacy_kaggle","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Kaggle board (legacy API) — legacy_kaggle","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_kaggle.html","id":"section-sharing","dir":"Reference","previous_headings":"","what":"Sharing","title":"Kaggle board (legacy API) — legacy_kaggle","text":"working teams, might want share pins others. can adding users making dataset public Kaggle's website. share specific users, can follow steps register Kaggle board allows download upload pins","code":""},{"path":"/dev/reference/legacy_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Local board (legacy API) — legacy_local","title":"Local board (legacy API) — legacy_local","text":"legacy_local() powers board_register_local(), allows access local pins created earlier versions pins package. new pins, recommend transition board_local() supports new pins API. legacy_temp() creates legacy board temporary location, use tests examples.","code":""},{"path":"/dev/reference/legacy_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local board (legacy API) — legacy_local","text":"","code":"legacy_local(path = NULL, name = \"local\", versions = FALSE)  board_register_local(name = \"local\", cache = board_cache_path(name), ...)  legacy_temp(name = \"temp\", ...)"},{"path":"/dev/reference/legacy_local.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"Local board (legacy API) — legacy_local","text":"path Path pins stored. supplied, defaults system cache directory, may deleted operating system run disk space.","code":""},{"path":"/dev/reference/legacy_local.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Local board (legacy API) — legacy_local","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_local.html","id":"pkg-arg-versions","dir":"Reference","previous_headings":"","what":"versions (argument)","title":"Local board (legacy API) — legacy_local","text":"versions board registered support versions?","code":""},{"path":"/dev/reference/legacy_local.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Local board (legacy API) — legacy_local","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_local.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Local board (legacy API) — legacy_local","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_s3.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 board (legacy API) — legacy_s3","title":"S3 board (legacy API) — legacy_s3","text":"use Amazon S3 Storage board, need Amazon S3 bucket user enough permissions access S3 bucket. can sign-create https://aws.amazon.com/. Note can take minutes created bucket usable. See board_s3() modern version legacy board.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 board (legacy API) — legacy_s3","text":"","code":"legacy_s3(   bucket = Sys.getenv(\"AWS_BUCKET\"),   key = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),   secret = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"),   cache = NULL,   region = NULL,   host = \"s3.amazonaws.com\",   name = \"s3\",   ... )  board_register_s3(   name = \"s3\",   bucket = Sys.getenv(\"AWS_BUCKET\"),   key = Sys.getenv(\"AWS_ACCESS_KEY_ID\"),   secret = Sys.getenv(\"AWS_SECRET_ACCESS_KEY\"),   cache = board_cache_path(name),   host = \"s3.amazonaws.com\",   region = NULL,   path = NULL,   ... )"},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-bucket","dir":"Reference","previous_headings":"","what":"bucket (argument)","title":"S3 board (legacy API) — legacy_s3","text":"bucket name Amazon S3 bucket.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-key, secret","dir":"Reference","previous_headings":"","what":"key, secret (argument)","title":"S3 board (legacy API) — legacy_s3","text":"key, secret key secret space. can create key secret \"Spaces access keys\" API settings. secret equivalent password, generally stored script. easiest alternative store AWS_SECRET_ACCESS_KEY environment variable, board_s3() use default.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"S3 board (legacy API) — legacy_s3","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-region","dir":"Reference","previous_headings":"","what":"region (argument)","title":"S3 board (legacy API) — legacy_s3","text":"region region use, required AWS regions enable V4 signatures.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-host","dir":"Reference","previous_headings":"","what":"host (argument)","title":"S3 board (legacy API) — legacy_s3","text":"host host use storage, defaults \"s3.amazonaws.com\".","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"S3 board (legacy API) — legacy_s3","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"S3 board (legacy API) — legacy_s3","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/legacy_s3.html","id":"pkg-arg-path","dir":"Reference","previous_headings":"","what":"path (argument)","title":"S3 board (legacy API) — legacy_s3","text":"path Subdirectory within url","code":""},{"path":"/dev/reference/new_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new board — new_board","title":"Create a new board — new_board","text":"Create new board","code":""},{"path":"/dev/reference/new_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new board — new_board","text":"","code":"new_board(board, api, cache, ...)  new_board_v0(board, name, cache = NULL, versions = FALSE, ...)  new_board_v1(board, cache, versioned = FALSE, ...)"},{"path":"/dev/reference/new_board.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Create a new board — new_board","text":"board name board register.","code":""},{"path":"/dev/reference/new_board.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Create a new board — new_board","text":"cache Cache path. Every board requires local cache avoid downloading files multiple times. default stores standard cache location operating system, can override needed.","code":""},{"path":"/dev/reference/new_board.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Create a new board — new_board","text":"... Additional parameters required initialize particular board.","code":""},{"path":"/dev/reference/new_board.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Create a new board — new_board","text":"name optional name used identify board. longer generally needed since passing around explicit board object.","code":""},{"path":"/dev/reference/new_board.html","id":"pkg-arg-versions, versioned","dir":"Reference","previous_headings":"","what":"versions, versioned (argument)","title":"Create a new board — new_board","text":"versions, versioned board registered support versions?","code":""},{"path":"/dev/reference/pin.html","id":null,"dir":"Reference","previous_headings":"","what":"Pin a resource (legacy API) — pin","title":"Pin a resource (legacy API) — pin","text":"Pins given resource locally given board.","code":""},{"path":"/dev/reference/pin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pin a resource (legacy API) — pin","text":"","code":"pin(x, name = NULL, description = NULL, board = NULL, ...)"},{"path":"/dev/reference/pin.html","id":"pkg-arg-x","dir":"Reference","previous_headings":"","what":"x (argument)","title":"Pin a resource (legacy API) — pin","text":"x object, local file remote URL pin.","code":""},{"path":"/dev/reference/pin.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Pin a resource (legacy API) — pin","text":"name name dataset object.","code":""},{"path":"/dev/reference/pin.html","id":"pkg-arg-description","dir":"Reference","previous_headings":"","what":"description (argument)","title":"Pin a resource (legacy API) — pin","text":"description Optional description pin.","code":""},{"path":"/dev/reference/pin.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Pin a resource (legacy API) — pin","text":"board board pin placed.","code":""},{"path":"/dev/reference/pin.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Pin a resource (legacy API) — pin","text":"... Additional parameters.","code":""},{"path":"/dev/reference/pin.html","id":"section-details","dir":"Reference","previous_headings":"","what":"Details","title":"Pin a resource (legacy API) — pin","text":"pin() allows cache remote resources intermediate results ease. caching remote resources, usually URLs, check HTTP caching headers avoid re-downloading remote result changed. makes ideal support reproducible research requiring manual instruction download resources running R script. addition, pin() still works working offline remote resource becomes unavailable; happens, warning triggered code continue work. pin() stores data frames two files, R native file 'CSV' file. force saving pin using R's native (RDS) format, can use pin((data)). can improve performance size cost making pin unreadable tools programming languages.","code":""},{"path":"/dev/reference/pin_browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse source of a pin — pin_browse","title":"Browse source of a pin — pin_browse","text":"pin_browse() navigates home pin, either internet local file system.","code":""},{"path":"/dev/reference/pin_browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse source of a pin — pin_browse","text":"","code":"pin_browse(board, name, version = NULL, ..., cache = FALSE)"},{"path":"/dev/reference/pin_browse.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Browse source of a pin — pin_browse","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_browse.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Browse source of a pin — pin_browse","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_browse.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Browse source of a pin — pin_browse","text":"version boards support versions, allows retrieve specific version pin. See vignette(\"versioning)\" details.","code":""},{"path":"/dev/reference/pin_browse.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Browse source of a pin — pin_browse","text":"... arguments passed methods.","code":""},{"path":"/dev/reference/pin_browse.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Browse source of a pin — pin_browse","text":"cache TRUE, open directory computer used cache pin files.","code":""},{"path":"/dev/reference/pin_default_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Pin Name — pin_default_name","title":"Create Pin Name — pin_default_name","text":"Creates pin name character expression generated deparse(substitute(x)).","code":""},{"path":"/dev/reference/pin_default_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Pin Name — pin_default_name","text":"","code":"pin_default_name(x, board)"},{"path":"/dev/reference/pin_default_name.html","id":"pkg-arg-x","dir":"Reference","previous_headings":"","what":"x (argument)","title":"Create Pin Name — pin_default_name","text":"x expression generate  pin name .","code":""},{"path":"/dev/reference/pin_default_name.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Create Pin Name — pin_default_name","text":"board board name generating .","code":""},{"path":"/dev/reference/pin_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a pin — pin_delete","title":"Delete a pin — pin_delete","text":"Delete pin (pins), removing board","code":""},{"path":"/dev/reference/pin_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a pin — pin_delete","text":"","code":"pin_delete(board, names, ...)"},{"path":"/dev/reference/pin_delete.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Delete a pin — pin_delete","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_delete.html","id":"pkg-arg-names","dir":"Reference","previous_headings":"","what":"names (argument)","title":"Delete a pin — pin_delete","text":"names names one pins delete","code":""},{"path":"/dev/reference/pin_delete.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Delete a pin — pin_delete","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload and download files to and from a board — pin_download","title":"Upload and download files to and from a board — pin_download","text":"lower-level interface pin_read() pin_write() can use pin file, opposed R object. path returned pin_download() read-path cached file: never attempt modify file.","code":""},{"path":"/dev/reference/pin_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload and download files to and from a board — pin_download","text":"","code":"pin_download(board, name, version = NULL, hash = NULL, ...)  pin_upload(   board,   paths,   name = NULL,   title = NULL,   description = NULL,   metadata = NULL,   ... )"},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Upload and download files to and from a board — pin_download","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Upload and download files to and from a board — pin_download","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Upload and download files to and from a board — pin_download","text":"version boards support versions, allows retrieve specific version pin. See vignette(\"versioning)\" details.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-hash","dir":"Reference","previous_headings":"","what":"hash (argument)","title":"Upload and download files to and from a board — pin_download","text":"hash Specify hash verify get exactly dataset expect. can find hash existing pin looking pin_hash pin_meta().","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Upload and download files to and from a board — pin_download","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-paths","dir":"Reference","previous_headings":"","what":"paths (argument)","title":"Upload and download files to and from a board — pin_download","text":"paths character vector file paths upload board.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-title","dir":"Reference","previous_headings":"","what":"title (argument)","title":"Upload and download files to and from a board — pin_download","text":"title title pin; important shared boards others can understand pin contains. omitted, brief description contents automatically generated.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-description","dir":"Reference","previous_headings":"","what":"description (argument)","title":"Upload and download files to and from a board — pin_download","text":"description detailed description pin contents.","code":""},{"path":"/dev/reference/pin_download.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Upload and download files to and from a board — pin_download","text":"metadata list containing additional metadata store pin. retrieving pin, stored user key, avoid potential clashes metadata pins uses.","code":""},{"path":"/dev/reference/pin_download.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload and download files to and from a board — pin_download","text":"pin_download() returns character vector file paths; pin_upload() returns fully qualified name new pin, invisibly.","code":""},{"path":"/dev/reference/pin_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a pin exist in a board? — pin_exists","title":"Does a pin exist in a board? — pin_exists","text":"pin exist board?","code":""},{"path":"/dev/reference/pin_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a pin exist in a board? — pin_exists","text":"","code":"pin_exists(board, name, ...)"},{"path":"/dev/reference/pin_exists.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Does a pin exist in a board? — pin_exists","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_exists.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Does a pin exist in a board? — pin_exists","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_exists.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Does a pin exist in a board? — pin_exists","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch/store a pin — pin_fetch","title":"Fetch/store a pin — pin_fetch","text":"low-level functions power pin_read(), pin_write(), pin_upload(), pin_download. needed primarily folks developing new board types, generally called directly.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch/store a pin — pin_fetch","text":"","code":"pin_fetch(board, name, version = NULL, ...)  pin_store(board, name, paths, metadata, versioned = NULL, x = NULL, ...)"},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Fetch/store a pin — pin_fetch","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Fetch/store a pin — pin_fetch","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Fetch/store a pin — pin_fetch","text":"version boards support versions, allows retrieve specific version pin. See vignette(\"versioning)\" details.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Fetch/store a pin — pin_fetch","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-paths","dir":"Reference","previous_headings":"","what":"paths (argument)","title":"Fetch/store a pin — pin_fetch","text":"paths character vector file paths upload board.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Fetch/store a pin — pin_fetch","text":"metadata list containing additional metadata store pin. retrieving pin, stored user key, avoid potential clashes metadata pins uses.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Fetch/store a pin — pin_fetch","text":"versioned pin versioned? default, NULL, use default board","code":""},{"path":"/dev/reference/pin_fetch.html","id":"pkg-arg-x","dir":"Reference","previous_headings":"","what":"x (argument)","title":"Fetch/store a pin — pin_fetch","text":"x object (typically data frame) pin.","code":""},{"path":"/dev/reference/pin_fetch.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch/store a pin — pin_fetch","text":"pin_fetch() called primarily side-effect downloading remote pins local cache. returns data pin_meta. pin_store() called side-effect uploading local file remote board. invisibly returns fully qualified pin name.","code":""},{"path":"/dev/reference/pin_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for pins (legacy API) — pin_find","title":"Search for pins (legacy API) — pin_find","text":"Search pins legacy boards.","code":""},{"path":"/dev/reference/pin_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for pins (legacy API) — pin_find","text":"","code":"pin_find(   text = NULL,   board = NULL,   name = NULL,   extended = FALSE,   metadata = FALSE,   ... )"},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-text","dir":"Reference","previous_headings":"","what":"text (argument)","title":"Search for pins (legacy API) — pin_find","text":"text text find pin description name.","code":""},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Search for pins (legacy API) — pin_find","text":"board board name used find pin.","code":""},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Search for pins (legacy API) — pin_find","text":"name exact name pin match searching.","code":""},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-extended","dir":"Reference","previous_headings":"","what":"extended (argument)","title":"Search for pins (legacy API) — pin_find","text":"extended additional board-specific columns shown?","code":""},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Search for pins (legacy API) — pin_find","text":"metadata Include pin metadata results?","code":""},{"path":"/dev/reference/pin_find.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Search for pins (legacy API) — pin_find","text":"... Additional parameters.","code":""},{"path":"/dev/reference/pin_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a pin (legacy API) — pin_get","title":"Retrieve a pin (legacy API) — pin_get","text":"Retrieves pin name local given board.","code":""},{"path":"/dev/reference/pin_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a pin (legacy API) — pin_get","text":"","code":"pin_get(   name,   board = NULL,   cache = TRUE,   extract = NULL,   version = NULL,   files = FALSE,   signature = NULL,   ... )"},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"name name pin.","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"board board pin retrieved .","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-cache","dir":"Reference","previous_headings":"","what":"cache (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"cache pin cache used? Defaults TRUE.","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-extract","dir":"Reference","previous_headings":"","what":"extract (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"extract compressed files extracted? board defines default behavior.","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"version version dataset retrieve, defaults latest one.","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-files","dir":"Reference","previous_headings":"","what":"files (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"files file names returned?","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-signature","dir":"Reference","previous_headings":"","what":"signature (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"signature Optional signature validate pin, use pin_info() compute signature.","code":""},{"path":"/dev/reference/pin_get.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve a pin (legacy API) — pin_get","text":"... Additional parameters.","code":""},{"path":"/dev/reference/pin_get.html","id":"section-details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a pin (legacy API) — pin_get","text":"pin_get() retrieves pin name , default, local board. can use board parameter specify board retrieve pin . board specified, use pin_find() find pin across boards retrieve one matches name.","code":""},{"path":"/dev/reference/pin_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve pin metadata (legacy API) — pin_info","title":"Retrieve pin metadata (legacy API) — pin_info","text":"Retrieve metadata pins legacy boards.","code":""},{"path":"/dev/reference/pin_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve pin metadata (legacy API) — pin_info","text":"","code":"pin_info(   name,   board = NULL,   extended = TRUE,   metadata = TRUE,   signature = FALSE,   ... )"},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"name exact name pin match searching.","code":""},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"board board name used find pin.","code":""},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-extended","dir":"Reference","previous_headings":"","what":"extended (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"extended additional board-specific information shown?","code":""},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"metadata additional pin-specific information shown?","code":""},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-signature","dir":"Reference","previous_headings":"","what":"signature (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"signature signature identify pin shown?","code":""},{"path":"/dev/reference/pin_info.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve pin metadata (legacy API) — pin_info","text":"... Additional parameters.","code":""},{"path":"/dev/reference/pin_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all pins in a board — pin_list","title":"List all pins in a board — pin_list","text":"List names pins board. low-level function; use pin_search() get data pin convenient form.","code":""},{"path":"/dev/reference/pin_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all pins in a board — pin_list","text":"","code":"pin_list(board, ...)"},{"path":"/dev/reference/pin_list.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"List all pins in a board — pin_list","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_list.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"List all pins in a board — pin_list","text":"... arguments passed methods","code":""},{"path":"/dev/reference/pin_list.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"List all pins in a board — pin_list","text":"character vector","code":""},{"path":"/dev/reference/pin_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Pin Logging — pin_log","title":"Pin Logging — pin_log","text":"Log message diagnosing pins package.","code":""},{"path":"/dev/reference/pin_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pin Logging — pin_log","text":"","code":"pin_log(...)"},{"path":"/dev/reference/pin_log.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Pin Logging — pin_log","text":"... Entries logged.","code":""},{"path":"/dev/reference/pin_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for a pin — pin_meta","title":"Retrieve metadata for a pin — pin_meta","text":"Pin metadata comes three sources: Standard metadata added pin_upload()/pin_write(). includes: $file - names files stored pin. $file_size - size file. $pin_hash - hash pin contents. $type - type pin, \"rds\", \"csv\", etc $title - pin title $description - pin description $created - date (version pin) created $api_version - API version used pin Metadata supplied user, stored $user. untouched supplied pin_write()/pin_upload() except converted YAML. Local metadata generated caching pin, stored $local. includes information like version pin, path local cache.","code":""},{"path":"/dev/reference/pin_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for a pin — pin_meta","text":"","code":"pin_meta(board, name, version = NULL, ...)"},{"path":"/dev/reference/pin_meta.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Retrieve metadata for a pin — pin_meta","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_meta.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Retrieve metadata for a pin — pin_meta","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_meta.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Retrieve metadata for a pin — pin_meta","text":"version boards support versions, allows retrieve specific version pin. See vignette(\"versioning)\" details.","code":""},{"path":"/dev/reference/pin_meta.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Retrieve metadata for a pin — pin_meta","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_meta.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for a pin — pin_meta","text":"list.","code":""},{"path":"/dev/reference/pin_reactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactive Pin (legacy API) — pin_reactive","title":"Reactive Pin (legacy API) — pin_reactive","text":"Creates pin reacts changes given board polling pin_get(), useful used shiny package.","code":""},{"path":"/dev/reference/pin_reactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactive Pin (legacy API) — pin_reactive","text":"","code":"pin_reactive(name, board, interval = 5000, session = NULL, extract = NULL)"},{"path":"/dev/reference/pin_reactive.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Reactive Pin (legacy API) — pin_reactive","text":"name name pin.","code":""},{"path":"/dev/reference/pin_reactive.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Reactive Pin (legacy API) — pin_reactive","text":"board board pin retrieved .","code":""},{"path":"/dev/reference/pin_reactive.html","id":"pkg-arg-interval","dir":"Reference","previous_headings":"","what":"interval (argument)","title":"Reactive Pin (legacy API) — pin_reactive","text":"interval Approximate number milliseconds wait retrieve updated pin. can numeric value, function returns numeric value.","code":""},{"path":"/dev/reference/pin_reactive.html","id":"pkg-arg-session","dir":"Reference","previous_headings":"","what":"session (argument)","title":"Reactive Pin (legacy API) — pin_reactive","text":"session user session associate file reader , NULL none. non-null, reader automatically stop session ends.","code":""},{"path":"/dev/reference/pin_reactive.html","id":"pkg-arg-extract","dir":"Reference","previous_headings":"","what":"extract (argument)","title":"Reactive Pin (legacy API) — pin_reactive","text":"extract compressed files extracted? board defines deefault behavior.","code":""},{"path":"/dev/reference/pin_reactive_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a pin in a reactive expression — pin_reactive_read","title":"Wrap a pin in a reactive expression — pin_reactive_read","text":"pin_reactive_read() pin_reactive_download() wrap results pin_read() pin_download() Shiny reactive. allows use pinned data within app, results automatically recompute pin modified.","code":""},{"path":"/dev/reference/pin_reactive_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a pin in a reactive expression — pin_reactive_read","text":"","code":"pin_reactive_read(board, name, interval = 5000)  pin_reactive_download(board, name, interval = 5000)"},{"path":"/dev/reference/pin_reactive_read.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Wrap a pin in a reactive expression — pin_reactive_read","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_reactive_read.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Wrap a pin in a reactive expression — pin_reactive_read","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_reactive_read.html","id":"pkg-arg-interval","dir":"Reference","previous_headings":"","what":"interval (argument)","title":"Wrap a pin in a reactive expression — pin_reactive_read","text":"interval Approximate number milliseconds wait re-downloading pin metadata check anything changed.","code":""},{"path":"/dev/reference/pin_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write pins — pin_read","title":"Read and write pins — pin_read","text":"Use pin_write() pin object board, pin_read() retrieve .","code":""},{"path":"/dev/reference/pin_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write pins — pin_read","text":"","code":"pin_read(board, name, version = NULL, hash = NULL, ...)  pin_write(   board,   x,   name = NULL,   type = NULL,   title = NULL,   description = NULL,   metadata = NULL,   versioned = NULL,   ... )"},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Read and write pins — pin_read","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Read and write pins — pin_read","text":"name Pin name.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Read and write pins — pin_read","text":"version boards support versions, allows retrieve specific version pin. See vignette(\"versioning)\" details.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-hash","dir":"Reference","previous_headings":"","what":"hash (argument)","title":"Read and write pins — pin_read","text":"hash Specify hash verify get exactly dataset expect. can find hash existing pin looking pin_hash pin_meta().","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Read and write pins — pin_read","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-x","dir":"Reference","previous_headings":"","what":"x (argument)","title":"Read and write pins — pin_read","text":"x object (typically data frame) pin.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-type","dir":"Reference","previous_headings":"","what":"type (argument)","title":"Read and write pins — pin_read","text":"type File type used save x disk. Must one \"csv\", \"rds\", \"json\", \"arrow\". supplied use json bare lists rds everything else.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-title","dir":"Reference","previous_headings":"","what":"title (argument)","title":"Read and write pins — pin_read","text":"title title pin; important shared boards others can understand pin contains. omitted, brief description contents automatically generated.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-description","dir":"Reference","previous_headings":"","what":"description (argument)","title":"Read and write pins — pin_read","text":"description detailed description pin contents.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-metadata","dir":"Reference","previous_headings":"","what":"metadata (argument)","title":"Read and write pins — pin_read","text":"metadata list containing additional metadata store pin. retrieving pin, stored user key, avoid potential clashes metadata pins uses.","code":""},{"path":"/dev/reference/pin_read.html","id":"pkg-arg-versioned","dir":"Reference","previous_headings":"","what":"versioned (argument)","title":"Read and write pins — pin_read","text":"versioned pin versioned? default, NULL, use default board","code":""},{"path":"/dev/reference/pin_read.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write pins — pin_read","text":"pin_read() returns R object read pin; pin_write() returns fully qualified name new pin, invisibly.","code":""},{"path":"/dev/reference/pin_read.html","id":"section-details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and write pins — pin_read","text":"pin_write() takes care details serialising R object disk, controlled type argument. See pin_download()/pin_upload() want perform serialisation work just files.","code":""},{"path":"/dev/reference/pin_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a pin (legacy API) — pin_remove","title":"Delete a pin (legacy API) — pin_remove","text":"Deletes pins legacy board.","code":""},{"path":"/dev/reference/pin_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a pin (legacy API) — pin_remove","text":"","code":"pin_remove(name, board = NULL)"},{"path":"/dev/reference/pin_remove.html","id":"pkg-arg-name","dir":"Reference","previous_headings":"","what":"name (argument)","title":"Delete a pin (legacy API) — pin_remove","text":"name name pin.","code":""},{"path":"/dev/reference/pin_remove.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Delete a pin (legacy API) — pin_remove","text":"board board pin removed.","code":""},{"path":"/dev/reference/pin_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for pins — pin_search","title":"Search for pins — pin_search","text":"underlying search method depends board, search text pin name title.","code":""},{"path":"/dev/reference/pin_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for pins — pin_search","text":"","code":"pin_search(board, search, ...)"},{"path":"/dev/reference/pin_search.html","id":"pkg-arg-board","dir":"Reference","previous_headings":"","what":"board (argument)","title":"Search for pins — pin_search","text":"board pin board, created board_folder(), board_rsconnect(), board_url() board_ function.","code":""},{"path":"/dev/reference/pin_search.html","id":"pkg-arg-search","dir":"Reference","previous_headings":"","what":"search (argument)","title":"Search for pins — pin_search","text":"search string search pin name title.","code":""},{"path":"/dev/reference/pin_search.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Search for pins — pin_search","text":"... Additional arguments passed methods.","code":""},{"path":"/dev/reference/pin_search.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for pins — pin_search","text":"data frame summarises metadata pin. Key attributes (name, type, description, created, file_size) pulled columns; everything else can found meta list-column.","code":""},{"path":"/dev/reference/pin_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Pin versions — pin_versions","title":"Pin versions — pin_versions","text":"pin_versions() lists available versions pin. pin_versions_prune() deletes old versions. pin_version_delete() deletes single version. See vignette(\"versioning)\" details versioning pins.","code":""},{"path":"/dev/reference/pin_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pin versions — pin_versions","text":"","code":"pin_versions(board, name, ..., full = deprecated())  pin_version_delete(board, name, version, ...)  pin_versions_prune(board, name, n = NULL, days = NULL)"},{"path":"/dev/reference/pin_versions.html","id":"pkg-arg-board, name","dir":"Reference","previous_headings":"","what":"board, name (argument)","title":"Pin versions — pin_versions","text":"board, name pair board pin name. modern boards, use board %>% pin_versions(name). backward compatibility legacy API, can also use pin_versions(name) pin_version(name, board).","code":""},{"path":"/dev/reference/pin_versions.html","id":"pkg-arg-...","dir":"Reference","previous_headings":"","what":"... (argument)","title":"Pin versions — pin_versions","text":"... Additional arguments passed methods specific board.","code":""},{"path":"/dev/reference/pin_versions.html","id":"pkg-arg-full","dir":"Reference","previous_headings":"","what":"full (argument)","title":"Pin versions — pin_versions","text":"full ","code":""},{"path":"/dev/reference/pin_versions.html","id":"pkg-arg-version","dir":"Reference","previous_headings":"","what":"version (argument)","title":"Pin versions — pin_versions","text":"version Version identifier.","code":""},{"path":"/dev/reference/pin_versions.html","id":"pkg-arg-n, days","dir":"Reference","previous_headings":"","what":"n, days (argument)","title":"Pin versions — pin_versions","text":"n, days Pick one n days choose many versions keep. n = 3 keep last three versions, days = 14 keep versions 14 days. Regardless values set, pin_versions_prune() never delete recent version.","code":""},{"path":"/dev/reference/pin_versions.html","id":"section-value","dir":"Reference","previous_headings":"","what":"Value","title":"Pin versions — pin_versions","text":"data frame least version column. boards may provided additional data.","code":""},{"path":"/dev/reference/pins-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pins: Pin, Discover and Share Resources — pins-package","title":"pins: Pin, Discover and Share Resources — pins-package","text":"Publish data sets, models, R objects, making     easy share across projects colleagues. can     pin objects variety \"boards\", including local folders (    share networked drive dropbox), RStudio connect, Amazon     S3, .","code":""},{"path":"/dev/reference/pins-package.html","id":"section-author","dir":"Reference","previous_headings":"","what":"Author","title":"pins: Pin, Discover and Share Resources — pins-package","text":"Maintainer: Hadley Wickham hadley@rstudio.com (ORCID) Authors: Javier Luraschi jluraschi@gmail.com contributors: RStudio [copyright holder]","code":""},{"path":"/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"/dev/reference/ui_addin_pin_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Finder Addin — ui_addin_pin_find","title":"Launch Finder Addin — ui_addin_pin_find","text":"Launches finder addin.","code":""},{"path":"/dev/reference/ui_addin_pin_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Finder Addin — ui_addin_pin_find","text":"","code":"ui_addin_pin_find()"},{"path":"/dev/reference/ui_connection_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Connection Addin — ui_connection_create","title":"Launch Connection Addin — ui_connection_create","text":"Launches connection addin.","code":""},{"path":"/dev/reference/ui_connection_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Connection Addin — ui_connection_create","text":"","code":"ui_connection_create()"},{"path":"/dev/news/index.html","id":"pins-development-version","dir":"Changelog","previous_headings":"","what":"pins (development version)","title":"pins (development version)","text":"pins 1.0.0 includes new API designed explicit less magical, well robust support versioning. legacy API (pin(), pin_get(), board_register()) continue work, new features implemented new API, encourage switch modern API quickly possible. Learn vignette(“pins-legacy”). modern API, create board object passed every pin_ function instead “registering” board later refereed string,. takes away magic board pin comes , leads code like looks :","code":"board <- board_local() board %>% pin_write(mtcars, \"mtcars\") board %>% pin_read(\"mtcars\")"},{"path":"/dev/news/index.html","id":"modern-pin-functions","dir":"Changelog","previous_headings":"","what":"Modern pin functions","title":"pins (development version)","text":"pin_read() pin_write() replace uses pin_get() pin(). pin_write() type argument allows choose serialise R objects disk, allowing manage tradeoffs speed, generality, language inter-op, metadata argument allows store arbitrary metadata (#430). pin_download() pin_upload() lower-level versions pin_read() pin_write() work file paths rather R objects. replace use pin() path eliminate ambiguity implicit pin_get(), can return either R object character vector paths. pin_browse() replaces board_browse(), takes specific pin, either original source internet, cached version local file system (#435). pin_delete() replaces pin_remove(), can delete multiple pins (#433). pin_list() lists pins board. pin_meta() replaces pin_info() retrieves pin metadata (#418). pin_search() replaces pin_find(). much limited previous version based assumptions true many boards. pin_reactive_read() pin_reactive_download() replace pin_reactive(). pin_exists() reports whether pin exists. pin_version_delete() allows delete single version. pin_versions_prune() (#459) allows easily prune old versions keeping either specified number versions, versions beneath certain age.","code":""},{"path":"/dev/news/index.html","id":"modern-boards","dir":"Changelog","previous_headings":"","what":"Modern boards","title":"pins (development version)","text":"version includes following modern boards: board_folder() generalised replacement old local board. board_folder() can store data directory, making possible share boards using shared network drives dropbox similar. using pins casually don’t want pick directory, board_local() variant board_folder() stores data system data directory. board_rsconnect() shares data RStudio connect. board supports modern legacy APIs, colleagues can use mixture pins versions transition pins 1.0.0. Note compatibility one directional: can pin_read() pins created pin(), can’t pin_get() pins created pin_write(). board_s3() stores data Amazon’s S3 service. built top paws. board_azure() stores data Azure’s blob storage. built top AzureStor (#474). board_url() lets create manual board vector URLs. useful pin_donwload() pin_read() cached, re-download data changed since last time used (#409). board replacement pin()’s ability work directly URLs legacy boards continue work legacy pins API; implement modern versions remaining legacy boards based user feedback.","code":""},{"path":"/dev/news/index.html","id":"minor-improvements-and-bug-fixes","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"pins (development version)","text":"board objects now class beginning pins_board_ also inherit common superclass pins_board. Pins longer works connections pane. automatically registered code tended either dangerous (’s easy accidentally leak credentials) useless (becasue relied variables connection pane doesn’t capture). Pinned data frames longer converted tibbles. “packages” board longer registered default; want use ’ll need register board_register(\"packages\"). radically simplified longer download packages, pin_find() now searches packages installed, rather stale snapshot data CRAN packages. CRAN files dataset removed package. board_browse() now works local boards. board_rsconnect() automatically connect current RSC pin board run inside RSC (assuming version 1.8.8 later) (#396). cache_browse(), cache_info(), cache_prune() provide basic tooling around local pins cache maintained pins (#438). pin_fetch() removed option(pins.invisible) now defunct ignored. can longer switch versioned pin unversioned pin without first deleting pin (#410).","code":""},{"path":"/dev/news/index.html","id":"pins","dir":"Changelog","previous_headings":"","what":"Pins","title":"pins 0.4.5","text":"Support downloading remote files service returns incompatible data.txt file (#310). Support pins 100MB Windows systems (#313). Avoid Windows crashing pin() locales (#127).","code":""},{"path":"/dev/news/index.html","id":"boards","dir":"Changelog","previous_headings":"","what":"Boards","title":"pins 0.4.5","text":"Silenced ‘encoding supplied’ warning (#330).","code":""},{"path":"/dev/news/index.html","id":"local","dir":"Changelog","previous_headings":"","what":"Local","title":"pins 0.4.5","text":"pin_find() longer searches text undocumented regular expression syntax (#270).","code":""},{"path":"/dev/news/index.html","id":"s3","dir":"Changelog","previous_headings":"","what":"S3","title":"pins 0.4.5","text":"Default using HTTPS S3 boards (#304). Support AWS V4 signatures registering S3 boards region parameter (#304)","code":""},{"path":"/dev/news/index.html","id":"cloud","dir":"Changelog","previous_headings":"","what":"Cloud","title":"pins 0.4.5","text":"Support path register board subpath Azure, DigitalOcean, Google Cloud S3 boards (#200). Avoid creating pins named unsupported characters Azure, DigitalOcean, Google Cloud S3 boards (#193).","code":""},{"path":"/dev/news/index.html","id":"github","dir":"Changelog","previous_headings":"","what":"GitHub","title":"pins 0.4.5","text":"Properly store relative paths path parameter specified GitHub boards (#199). Add support repos ‘main’ branch default (#336). Add support large file private repo releases (#292). board registered versions = FALSE, GitHub tags also delete large files present (#285).","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.4.5","text":"Invalid ‘account’ ‘server’ parameters show proper errors (#296). Increase total entries retrieved pin_find(), configurable pins.search.count (#296). Fix regression introduced pins 0.4.2 (#253) preventing users collaborating existing pins access (#302). Avoid deleting pin upload fails avoid deleting versions (#306). Support re-creating pins pins previously properly updated (#308). Adjust pin preview display 1K rows instead 10K (#315). Avoid changing columns names data frame preview (#190). Improve error message token authentication fails (#327).","code":""},{"path":"/dev/news/index.html","id":"pins-1","dir":"Changelog","previous_headings":"","what":"Pins","title":"pins 0.4.4","text":"files bigger 100MB pin() creates symlinks speed uploads, can configured using pins.link.size option (#273). using pin(zip = TRUE) zip longer contains local patahs (#277).","code":""},{"path":"/dev/news/index.html","id":"google-cloud","dir":"Changelog","previous_headings":"","what":"Google Cloud","title":"pins 0.4.4","text":"Disable caching data.txt support creating multiple pins (#275).","code":""},{"path":"/dev/news/index.html","id":"rstudio","dir":"Changelog","previous_headings":"","what":"RStudio","title":"pins 0.4.4","text":"Prevent connections pane hanging multiple pins updated (#280).","code":""},{"path":"/dev/news/index.html","id":"website","dir":"Changelog","previous_headings":"","what":"Website","title":"pins 0.4.4","text":"Support pin_get(download = FALSE) avoid checking updates.","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-1","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.4.4","text":"Support servers mismatched http vs https protocols. Make use RSCONNECT_TAR running report inside RStudio Connect (#293).","code":""},{"path":"/dev/news/index.html","id":"boards-1","dir":"Changelog","previous_headings":"","what":"Boards","title":"pins 0.4.3","text":"Properly export board_pin_versions allow custom boards extending versions (#265).","code":""},{"path":"/dev/news/index.html","id":"website-1","dir":"Changelog","previous_headings":"","what":"Website","title":"pins 0.4.3","text":"Fix regression creating pins using brand new cloud board (#268).","code":""},{"path":"/dev/news/index.html","id":"website-2","dir":"Changelog","previous_headings":"","what":"Website","title":"pins 0.4.2","text":"Fix issue removing pins custom domain names cloud boards (#234). Fix warning using pin() storage locations custom domain name (#237). Fix issue datatxt refreshing deleted entries (#239).","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-2","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.4.2","text":"Support versions = FALSE board_register() avoid using much space creating pins (#245). Prevent administrators overriding pins don’t , unless pin specified user/name (#253). Support connect servers redirect configured full server URL specified board_register() (#256). Throw error multiple accounts associated server (#261).","code":""},{"path":"/dev/news/index.html","id":"pin","dir":"Changelog","previous_headings":"","what":"Pin","title":"pins 0.4.1","text":"running production environments (usually set R_CONFIG_ACTIVE environment variable), avoid using shared caches. Fix pin() failing update cache server returns NULL etag. Support custom_metadata pin() allow saving custom fields data.txt file. Improve performannce pin() URLs containing large files already cached prerviously pin() (#225). Avoid showing upload download progress creating R Markdown documents non-interactive use cases (#227). pin(url) fails local cache exists, produce warning retrieve cached version (#231). Support pin(zip = TRUE) create zip file given path creating pin (#232).","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-3","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.4.1","text":"Fix overriding pin corrupt metadata. Avoid using shared caches running inside RStudio Connect. Fixed ‘invalid uid’ warning creaating pin undner Linux servers (#263).","code":""},{"path":"/dev/news/index.html","id":"kaggle","dir":"Changelog","previous_headings":"","what":"Kaggle","title":"pins 0.4.1","text":"Support find download competition datasets.","code":""},{"path":"/dev/news/index.html","id":"pins-040","dir":"Changelog","previous_headings":"","what":"pins 0.4.0","title":"pins 0.4.0","text":"Support versioning boards. Support DigitalOcean board.","code":""},{"path":"/dev/news/index.html","id":"pin-1","dir":"Changelog","previous_headings":"","what":"Pin","title":"pins 0.4.0","text":"Finding pins pin_find() sort results default (#201). Avoid incomplete final line found warning error wheen reading manifests. Support using pin() across multiple concurrent processes (#182). Support pin_get() download arbitrary files cloud boards like Azure, DigitalOcean, GitHub, Google Cloud, RStudio Connect, S3. Fix issue http HEAD requests tgimeout prevent pin downloading slow connections.","code":""},{"path":"/dev/news/index.html","id":"rstudio-1","dir":"Changelog","previous_headings":"","what":"RStudio","title":"pins 0.4.0","text":"Support access_type parameter RStudio Connect. pin() now refreshes connections pane. pin_remove() now refreshes connections pane.","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-4","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.4.0","text":"Support code parameter pin() customize R code used UI retrieve pin (#77). Improve error message pin_get() duplicate names (#171). Fix board register error using URL ports (#195). Enable retrieving public pins without authentication (#83).","code":""},{"path":"/dev/news/index.html","id":"github-1","dir":"Changelog","previous_headings":"","what":"GitHub","title":"pins 0.4.0","text":"Support versions = FALSE board_register() also delete release files pin removed (#91). Support versions = FALSE board_register() avoid creating versioned GitHub releases (#197). Support committing github files single commit (#197). Support custom GitHub hosts including GitHub Enterprise using host parameter board_register_github() (#163).","code":""},{"path":"/dev/news/index.html","id":"websites","dir":"Changelog","previous_headings":"","what":"Websites","title":"pins 0.4.0","text":"Using pin() now searches data.txt files URLs URL contains file extension, behavior can turnned pins.search.datatxt option.","code":""},{"path":"/dev/news/index.html","id":"pins-2","dir":"Changelog","previous_headings":"","what":"Pins","title":"pins 0.3.2","text":"pin_info() adds support metadata parameter avoid retrieving pin contents.","code":""},{"path":"/dev/news/index.html","id":"s3-1","dir":"Changelog","previous_headings":"","what":"S3","title":"pins 0.3.2","text":"Added support host parameter configure “s3.amazonaws.com” custom locations.","code":""},{"path":"/dev/news/index.html","id":"github-2","dir":"Changelog","previous_headings":"","what":"GitHub","title":"pins 0.3.2","text":"Fix regression uploading large datasets release files.","code":""},{"path":"/dev/news/index.html","id":"pins-3","dir":"Changelog","previous_headings":"","what":"Pins","title":"pins 0.3.1","text":"pin_info() prints long character strings line. Fixed issue pin_remove() S3, Azure, GCloud, Google website boards (#138). Fixed issue pinning complex data frames nested lists (#142).","code":""},{"path":"/dev/news/index.html","id":"azure","dir":"Changelog","previous_headings":"","what":"Azure","title":"pins 0.3.1","text":"Added missing key parameter board_register_azure().","code":""},{"path":"/dev/news/index.html","id":"rstudio-2","dir":"Changelog","previous_headings":"","what":"RStudio","title":"pins 0.3.1","text":"Fixed connection suggested code caused pin_find() (#137). Fixed connection launcher Azure connections.","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-5","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.3.1","text":"Fix issue uploading large pins causing .character(type) TRUE error. Fix issue affecting boards registered trailing slash (#151). Improve error messages pin fails created (#149). Added support CONNECT_API_KEY CONNECT_SERVER place RSCONNECT_API RSCONNECT_SERVER, still supported backwards-compatibility.","code":""},{"path":"/dev/news/index.html","id":"pins-030","dir":"Changelog","previous_headings":"","what":"pins 0.3.0","title":"pins 0.3.0","text":"Support Azure board. Support Google Cloud board. Support S3 board.","code":""},{"path":"/dev/news/index.html","id":"pins-4","dir":"Changelog","previous_headings":"","what":"Pins","title":"pins 0.3.0","text":"pin() extracts URLs end .gz zip, can disabled pin(\"<url>\", extract = FALSE). pin() longer prints pin, can revert behavior options(pins.invisible = FALSE) (#122). Show upload progress files larger 10mb. Avoid changing data.table using pin() get_pin(). Support pin_info() describe pin extended = TRUE pin_find() show extended information pin. Support extract parameter pin_get(), pin(), pin_reactive() override default file extraction behavior. Support extract gzip files R.utils package installed. Show download progress files larger 10mb. Support () force pin created without additional overhead exporting CSV enhancements (#73). Support creating automatic name using pin() multiple URL.","code":""},{"path":"/dev/news/index.html","id":"boards-2","dir":"Changelog","previous_headings":"","what":"Boards","title":"pins 0.3.0","text":"Avoid “create dir” warning systems empty cache folder.","code":""},{"path":"/dev/news/index.html","id":"rstudio-3","dir":"Changelog","previous_headings":"","what":"RStudio","title":"pins 0.3.0","text":"Gracefully handle errors pin’s preview can’t created. Website boards now support browse menu item connection. Fix data frames previewing character columns special characters. Fix connection code board registered automatically.","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-6","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.3.0","text":"Fix issue pin_find() show available pins. Fix issue RStudio Connections pane show pins. Store downloaded content user subfolder insited rsconnect cache. Removed pin_find() workaround beta rsconnect server searching causing timeout. Fix RStudio Connect servers /content/ used content URLs. Fix issue expanding pins columns RStudio pins similar names RStudio Connect boards. Fix issue removing pins similar names RStudio Connect boards.","code":""},{"path":"/dev/news/index.html","id":"python","dir":"Changelog","previous_headings":"","what":"Python","title":"pins 0.3.0","text":"Support Python 3.","code":""},{"path":"/dev/news/index.html","id":"websites-1","dir":"Changelog","previous_headings":"","what":"Websites","title":"pins 0.3.0","text":"name parameter board_register_datatxt() now optional. Fix pin_find() properly search desecription files.","code":""},{"path":"/dev/news/index.html","id":"github-3","dir":"Changelog","previous_headings":"","what":"GitHub","title":"pins 0.3.0","text":"Various fixes GitHub boards using path parameter registering board (#121).","code":""},{"path":"/dev/news/index.html","id":"rstudio-connect-7","dir":"Changelog","previous_headings":"","what":"RStudio Connect","title":"pins 0.2.0","text":"Support retrieving pins shared others RStudio Connect boards. Support RStudio Connect servers running subpath server. Add support RSCONNECT_SERVER environment variable ease configuration automated RStudio Connect reports. Fix intermittent failure retrieve pins RStudio Connect boards creating . Fix RStudio Connect boards retrieve pins match pin names (#45). Fix data frames nested data frames rsconnect boards (#36).","code":""},{"path":"/dev/news/index.html","id":"github-4","dir":"Changelog","previous_headings":"","what":"GitHub","title":"pins 0.2.0","text":"board_register_github() now checks repo exist (#63). Adjusted max upload file 25mb avoid “server error” API, larger files 25mb uploaded release files. can configured using pins.github.release option, deefaults 25. Allow overriding GitHub pin pin partially failed created.","code":""},{"path":"/dev/news/index.html","id":"boards-3","dir":"Changelog","previous_headings":"","what":"Boards","title":"pins 0.2.0","text":"Using board attempt automatically register, pin(iris, board = \"rsconnect\") work default configuration even board explicitly registered (#50). Registers “local” board default, longer need explicitly run board_register_local() (#56). Make use rappdirs package define default cache path, replaces ~/.pins. Use board_cache_path() retrieve default cache path.","code":""},{"path":"/dev/news/index.html","id":"websites-2","dir":"Changelog","previous_headings":"","what":"Websites","title":"pins 0.2.0","text":"Fix data.txt boards created GitHub boards using large files.","code":""},{"path":"/dev/news/index.html","id":"pins-012","dir":"Changelog","previous_headings":"","what":"pins 0.1.2","title":"pins 0.1.2","text":"Support upload files larger 50mb GitHub boards release files.","code":""},{"path":"/dev/news/index.html","id":"pins-011","dir":"Changelog","previous_headings":"","what":"pins 0.1.1","title":"pins 0.1.1","text":"Fix CRAN request explicitly opt-use local home path cache running board_register_local(). Fix error retrieving pins Kaggle boards (#31). Support large files GitHub board (#30).","code":""},{"path":"/dev/news/index.html","id":"pins-010","dir":"Changelog","previous_headings":"","what":"pins 0.1.0","title":"pins 0.1.0","text":"Support local board. Support Kaggle board. Support packages board. Support RStudio Connect board. Support GitHub board. Support website board.","code":""}]
